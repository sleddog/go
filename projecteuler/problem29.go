/*
https://projecteuler.net/problem=29
Distinct powers

Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

2^2=4, 2^3=8, 2^4=16, 2^5=32
3^2=9, 3^3=27, 3^4=81, 3^5=243
4^2=16, 4^3=64, 4^4=256, 4^5=1024
5^2=25, 5^3=125, 5^4=625, 5^5=3125
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
*/

package main

import (
	"fmt"
	"math/big"
)

func main() {
	fmt.Println("problem 29")
	aMax := 100 //5
	bMax := 100 //5
	seq := make(map[string]bool)
	for a := 2; a <= aMax; a++ {
		for b := 2; b <= bMax; b++ {
			value := new(big.Int).Exp(big.NewInt(int64(a)), big.NewInt(int64(b)), nil)
			//fmt.Println(value)
			seq[value.String()] = true
		}
	}
	fmt.Println("distinct terms: ", len(seq))
}
